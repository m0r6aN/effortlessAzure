// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using MF.Libraries.Data.Tableau.Context;
using MF.Libraries.Data.Tableau.Entity;
using System;
using System.Collections.Generic;

namespace MF.Libraries.Data.Tableau.Context.Configurations
{
    public partial class LoadTendersConfiguration : IEntityTypeConfiguration<LoadTenders>
    {
        public void Configure(EntityTypeBuilder<LoadTenders> entity)
        {
            entity.HasKey(e => e.PKey).HasName("PK_LaneMatching.LoadTenders");

            entity.ToTable("LoadTenders", "LaneMatching");

            entity.HasIndex(e => e.LoadTenderClientEquipmentPKey, "IX_LoadTenderClientEquipmentPKey");

            entity.HasIndex(e => e.LoadTenderClientPKey, "IX_LoadTenderClientPKey");

            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryDate).HasColumnType("datetime");
            entity.Property(e => e.DeliveryZip).IsRequired();
            entity.Property(e => e.Distance).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.PickupDate).HasColumnType("datetime");
            entity.Property(e => e.PickupZip).IsRequired();
            entity.Property(e => e.UpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.LoadTenderClientEquipmentPKeyNavigation).WithMany(p => p.LoadTenders)
            .HasForeignKey(d => d.LoadTenderClientEquipmentPKey)
            .OnDelete(DeleteBehavior.ClientSetNull)
            .HasConstraintName("FK_LaneMatching.LoadTenders_LaneMatching.LoadTenderClientEquipments_LoadTenderClientEquipmentPKey");

            entity.HasOne(d => d.LoadTenderClientPKeyNavigation).WithMany(p => p.LoadTenders)
            .HasForeignKey(d => d.LoadTenderClientPKey)
            .HasConstraintName("FK_LaneMatching.LoadTenders_LaneMatching.LoadTenderClients_LoadTenderClientPKey");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<LoadTenders> entity);
    }
}
